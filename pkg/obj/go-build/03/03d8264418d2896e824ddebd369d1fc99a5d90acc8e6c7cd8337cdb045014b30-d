// Code generated by cmd/cgo; DO NOT EDIT.

//line /var/folders/64/shs_jv2s7_v1ymd1gzjrwt3w0000gn/T/cgotest2227162272/src/cgotest/issue24161res/restype.go:1:1
// Copyright 2018 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build darwin

package issue24161res; import _cgo_unsafe "unsafe"

/*
#cgo LDFLAGS: -framework CoreFoundation
#include <CoreFoundation/CoreFoundation.h>
*/
import _ "unsafe"
import (
	"reflect"
	"testing"
)

func Test(t *testing.T) {
	if k := reflect.TypeOf(func() _Ctype_CFArrayRef{ var _cgo0 _Ctype_CFAllocatorRef = /*line :20:41*/0; var _cgo1 *_cgo_unsafe.Pointer = /*line :20:44*/nil; var _cgo2 _Ctype_CFIndex = /*line :20:49*/0; var _cgo3 *_Ctype_struct___0 = /*line :20:52*/nil; return /*line :20:56*/_Cfunc_CFArrayCreate(_cgo0, _cgo1, _cgo2, _cgo3); }()).Kind(); k != reflect.Uintptr {
		t.Fatalf("bad kind %s\n", k)
	}
}
