// Code generated by cmd/cgo; DO NOT EDIT.

//line /var/folders/64/shs_jv2s7_v1ymd1gzjrwt3w0000gn/T/cgotest3446780546/src/cgotest/issue24161e1/main.go:1:1
// Copyright 2018 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build darwin

package issue24161e1

/*
#cgo CFLAGS: -x objective-c
#cgo LDFLAGS: -framework CoreFoundation -framework Security
#include <TargetConditionals.h>
#include <CoreFoundation/CoreFoundation.h>
#include <Security/Security.h>
#if TARGET_OS_IPHONE == 0 && __MAC_OS_X_VERSION_MAX_ALLOWED < 101200
  typedef CFStringRef SecKeyAlgorithm;
  static CFDataRef SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error){return NULL;}
  #define kSecKeyAlgorithmECDSASignatureDigestX962SHA1 foo()
  static SecKeyAlgorithm foo(void){return NULL;}
#endif
*/
import _ "unsafe"
import (
	"fmt"
	"testing"
)

func f1() {
	func() _Ctype_CFDataRef{ var _cgo0 _Ctype_SecKeyRef = /*line :29:26*/0; _cgo1 := /*line :29:29*/*_Cvar_kSecKeyAlgorithmECDSASignatureDigestX962SHA1 /*line :29:75*/; var _cgo2 _Ctype_CFDataRef = /*line :29:77*/0; var _cgo3 *_Ctype_CFErrorRef = /*line :29:80*/nil; _cgoCheckPointer(_cgo1, nil); return /*line :29:84*/_Cfunc_SecKeyCreateSignature(_cgo0, _cgo1, _cgo2, _cgo3); }()
}

func f2(e  /*line :32:11*/_Ctype_CFErrorRef /*line :32:23*/) {
	if desc := func() _Ctype_CFStringRef{ var _cgo0 _Ctype_CFErrorRef = /*line :33:38*/e; return /*line :33:40*/_Cfunc_CFErrorCopyDescription(_cgo0); }(); desc != 0 {
		fmt.Println(desc)
	}
}

func Test(t *testing.T) {}
